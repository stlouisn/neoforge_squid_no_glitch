plugins {
    id "dev.architectury.loom" version "${architectury_loom_version}-SNAPSHOT" apply false
    id "architectury-plugin" version "${architectury_plugin_version}-SNAPSHOT"
    id "com.gradleup.shadow" version "${shadow_plugin_version}" apply false
    id "java"
}

architectury {
    minecraft = project.minecraft_version
}

allprojects {
    group = project.maven_group
    version = project.mod_version
}

subprojects {

    apply plugin: "dev.architectury.loom"
    apply plugin: "architectury-plugin"
    apply plugin: "java"

    repositories {

        // Mod Menu
        maven { url = "https://maven.terraformersmc.com/" }

    }

    dependencies {

        minecraft "com.mojang:minecraft:${project.minecraft_version}"

        // Mojang Mappings
        loom {
            silentMojangMappingsLicense()
        }
        mappings(loom.officialMojangMappings())

    }

    java {
        sourceCompatibility = JavaVersion.VERSION_21
        targetCompatibility = JavaVersion.VERSION_21

        manifest {
            attributes([
                "Specification-Title"     : project.mod_id,
                "Specification-Vendor"    : project.mod_authors,
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.mod_name,
                "Implementation-Version"  : project.mod_version,
                "Implementation-Vendor"   : project.mod_authors,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
            ])
        }
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.release = 21
        it.options.encoding = "UTF-8"
    }

    processResources {
        def stringProperties = providers.gradlePropertiesPrefixedBy('').get()
        stringProperties.each { inputs.property(it.key, it.value) }

        ["fabric.mod.json", "META-INF/neoforge.mods.toml"].each {
            filesMatching(it) {
                expand(stringProperties) {
                    escapeBackslash = true
                }
            }
        }
    }
}