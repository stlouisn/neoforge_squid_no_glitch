plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.7-SNAPSHOT" apply false
}

architectury {
    minecraft = project.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    dependencies {
        minecraft "com.mojang:minecraft:${project.minecraft_version}"
        mappings(loom.officialMojangMappings())
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"

    group = project.maven_group

    base {
        archivesName = "${project.archives_base_name}-${project.minecraft_version}-${project.mod_version}"
    }

    repositories {
        maven { url = "https://jitpack.io" }
        mavenCentral()
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.release = project.java_version as Integer
    }

    java {
        targetCompatibility = sourceCompatibility = JavaVersion.toVersion(project.java_version as Integer)

        manifest {
            attributes([
                    "Specification-Title"     : project.mod_id,
                    "Specification-Vendor"    : project.mod_authors,
                    "Specification-Version"   : "1",
                    "Implementation-Title"    : project.mod_name,
                    "Implementation-Version"  : project.mod_version,
                    "Implementation-Vendor"   : project.mod_authors,
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
            ])
        }
    }
}

subprojects {
    processResources {
        def stringProperties = providers.gradlePropertiesPrefixedBy('').get()
        stringProperties.each { inputs.property(it.key, it.value) }

        ["*.mod.json*", "META-INF/*mods.toml"].each {
            filesMatching(it) {
                expand(stringProperties) {
                    escapeBackslash = true
                }
            }
        }
    }
}